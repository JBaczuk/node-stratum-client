{"version":3,"file":"index.js","sources":["../src/StratumClient.ts"],"sourcesContent":["import { Socket } from \"net\"\r\nimport { promisify } from \"util\"\r\n\r\nfunction createPromiseSocket() {\r\n  const socket = new Socket()\r\n  socket.connectp = promisify(socket.connect)\r\n  return socket\r\n}\r\n\r\nexport default class StratumClient {\r\n  private socket = createPromiseSocket()\r\n  private requestID = 0\r\n  private methodListeners: {[index: number]: { resolve: Function, reject: Function }} = {}\r\n  private nonIdListeners: {[index: string]: [Function]} = {}\r\n  private closeListener: () => void\r\n  private errorListener: (Error) => void\r\n\r\n  constructor() {\r\n    this.socket.setEncoding(\"utf8\")\r\n\r\n    this.socket.on(\"data\", data => {\r\n      data.toString()\r\n        .split(\"\\n\")\r\n        .filter(s => s.length > 0)\r\n        .map(JSON.parse)\r\n        .forEach(this.onData.bind(this))\r\n    })\r\n\r\n    this.socket.on(\"error\", error => {\r\n      if (this.errorListener) {\r\n        this.errorListener(error)\r\n      }\r\n    })\r\n    \r\n    this.socket.on(\"close\", () => {\r\n      if (this.closeListener) {\r\n        this.closeListener()\r\n      }\r\n    })\r\n  }\r\n\r\n  onData(json) {\r\n    if (json.id !== null) {\r\n      const listener = this.methodListeners[json.id]\r\n      if (listener) {\r\n        if (!json.result) {\r\n          return listener.reject(json.error)\r\n        }\r\n        listener.resolve(json)\r\n      }\r\n      return\r\n    }\r\n\r\n    const listeners = this.nonIdListeners[json.method]\r\n    if (listeners) {\r\n      listeners.forEach(f => f(json))\r\n    }\r\n  }\r\n  \r\n  onSocketClose(callback: () => void) {\r\n    this.closeListener = callback\r\n  }\r\n\r\n  onSocketError(callback: (Error) => void) {\r\n    this.errorListener = callback\r\n  }\r\n\r\n  connect(port: number, host: string) {\r\n    return this.socket.connectp(port, host)\r\n  }\r\n\r\n  private write(method: string, params: (string|number)[] = []) {\r\n    const id = this.requestID\r\n    const obj = { id, method, params }\r\n    const data = JSON.stringify(obj) + \"\\n\"\r\n    this.socket.write(data)\r\n    this.requestID++\r\n\r\n    // on(\"data\") で結果が返ってくるまで resolve, reject を保持しておく\r\n    return new Promise((resolve, reject) => {\r\n      this.methodListeners[id] = { resolve, reject }\r\n    })\r\n  }\r\n\r\n  private observe(method, callback, transform = x => x) {\r\n    if (!this.nonIdListeners[method]) {\r\n      this.nonIdListeners[method] = [callback]\r\n    } else {\r\n      this.nonIdListeners[method].push(callback)\r\n    }\r\n  }\r\n\r\n  authorize(workerName: string, workerPassword: string = \"\") {\r\n    return this.write(\"mining.authorize\", [workerName, workerPassword])\r\n  }\r\n\r\n  subscribe() {\r\n    return this.write(\"mining.subscribe\")\r\n  }\r\n\r\n  submit(workerName: string, jobID: string, extraNonce2: string, nTime: string, nOnce: string) {\r\n    return this.write(\"mining.submit\", [workerName, jobID, extraNonce2, nTime, nOnce])\r\n  }\r\n\r\n  getTransactions(jobID) {\r\n    return this.write(\"mining.get_transactions\", [jobID])\r\n  }\r\n\r\n  onSetDifficulty(callback) {\r\n    this.observe(\"mining.set_difficulty\", callback)\r\n  }\r\n\r\n  onNotify(callback) {\r\n    this.observe(\"mining.notify\", (result: {}) => {\r\n      const [ jobID, prevhash, coinb1, coinb2, merkleBranches, version, nBits, nTime, clean ] = result.params\r\n      callback({\r\n        jobID, \r\n        prevhash, \r\n        coinb1, \r\n        coinb2,\r\n        merkleBranches, \r\n        version, \r\n        nBits, \r\n        nTime, \r\n        clean\r\n      })\r\n    })\r\n  }\r\n}\r\n"],"names":["Socket","promisify"],"mappings":"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"}